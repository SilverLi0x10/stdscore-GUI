name: Release

on:
    push:
        tags:
            - 'v*'

jobs:
    build:
        name: Build (${{ matrix.target }})
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      target: x86_64-pc-windows-msvc
                      artifact: stdscore-GUI-x86_64-windows.exe
                    - os: windows-latest
                      target: i686-pc-windows-msvc
                      artifact: stdscore-GUI-x86-windows.exe
                    - os: ubuntu-latest
                      target: x86_64-unknown-linux-musl
                      artifact: stdscore-GUI-x86_64-linux
                    - os: ubuntu-latest
                      target: i686-unknown-linux-musl
                      artifact: stdscore-GUI-x86-linux

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.target }}

            - name: Install musl tools (Linux only)
              if: contains(matrix.target, 'musl')
              run: |
                  sudo apt-get update
                  sudo apt-get install -y musl-tools

            - name: Build
              run: cargo build --release --target ${{ matrix.target }}

            - name: Rename artifact
              run: |
                  mkdir artifacts
                  cp target/${{ matrix.target }}/release/stdscore-GUI artifacts/${{ matrix.artifact }}
              shell: bash

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ matrix.artifact }}
                  path: artifacts/${{ matrix.artifact }}

    release:
        name: Create Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                  files: artifacts/**/*
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_PAT }}
